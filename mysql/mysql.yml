--- 

version: "3.3"

services: 

  mysql: 
    image: mysql:5.7
    ports: 
      - "3306:3306"
    volumes: 
      - "./initdb:/docker-entrypoint-initdb.d"
      - "mysqldata:/var/lib/mysql"
    environment: 
      MYSQL_DATABASE: mydb
      MYSQL_PASSWORD: EQRzesyzVRMHh3Pr7yKcQkWVQAzDQDkx
      MYSQL_USER: user
      MYSQL_ROOT_PASSWORD: dEYnK3C5kny5pVHY6XRxTHjWzWhQhe4Q
    networks: 
      back-tier: 
        aliases: 
          - mysql
    configs:
    # to avoid changes to the original mysql image, we import the healthcheck script using configs
      - mysql-healthcheck
    # it simply checks that the client can connect to mysql. No test is run w.r.t. the cluster.
    healthcheck:
        test: ["CMD", "bash", "/mysql-healthcheck"]
        interval: 30s
        timeout: 10s
        retries: 6
    deploy: 
      replicas: 1
      resources: 
        limits: 
          cpus: "0.1"
          memory: 500m
      restart_policy: 
        condition: on-failure
        delay: 10s

  phpmyadmin: 
    image: phpmyadmin/phpmyadmin
    ports: 
      - "8881:80"
    volumes: 
      - /sessions
    networks: 
      front-tier: 
        aliases: 
          - phpmyadmin
      back-tier: 
        aliases: 
          - phpmyadmin
    environment: 
      MYSQL_PASSWORD: EQRzesyzVRMHh3Pr7yKcQkWVQAzDQDkx
      MYSQL_ROOT_PASSWORD: dEYnK3C5kny5pVHY6XRxTHjWzWhQhe4Q
      MYSQL_USER: user
      PMA_HOST: mysql
    depends_on: 
      - mysql
    deploy: 
      replicas: 1
      resources: 
        limits: 
          cpus: "0.1"
          memory: 300M
      restart_policy: 
        condition: on-failure
        delay: 10s

configs:
  # to avoid changes to the original mysql image, we import the healthcheck script using configs
  mysql-healthcheck:
    file: mysql-healthcheck

networks: 
  back-tier: 
    external: true
  front-tier: 
    external: true

volumes: 
  mysqldata: 
    external: true
